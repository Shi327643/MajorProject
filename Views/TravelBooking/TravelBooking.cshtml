@model TravelBookingProject.ViewModel.TravelViewModel

@{
    ViewBag.Title = "Booking";
}



<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>                    @*We are doing this to validate the field at client side*@
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


<h2>Booking</h2>
<div class="text-danger">
    @ViewBag.Error
    <br />
    @ViewBag.Errormsg
</div>
@using (Html.BeginForm())

{
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <table class="table table-striped">
        <tr>
            <td>@Html.LabelFor(m => m.EmpName)</td>
            <td>
                @Html.TextBoxFor(m => m.EmpName, new { @class = "form-control", @Value = Model.EmpName, @readonly = "readonly" })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.EmpName)</span>
            </td>
            <td>@Html.Label("Employee GCM")</td>
            <td>

                @Html.DropDownListFor(m => m.GCMId, Model.GCMItem ?? new List<SelectListItem>(), "--------Select------------", new { @class = "form-control" })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.GCMId)</span>
            </td>
            <td>@Html.Label("Request Number")</td>
            <td>
                @Html.TextBoxFor(m => m.Request_No, new { @class = "form-control", @readonly = "readonly" })
            </td>
        </tr>
        <tr>
            <td>@Html.Label("Travel Type")</td>
            <td>
                @Html.DropDownListFor(m => m.TravelId, Model.TravelItem ?? new List<SelectListItem>(), "--------Select------------", new { @class = "form-control" })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.TravelId)</span>
            </td>

            <td>@Html.LabelFor(m => m.Status)</td>
            <td>
                @Html.TextBoxFor(m => m.Status, new { @class = "form-control", @Value = Model.Status })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.Status)</span>
            </td>



        </tr>
        <tr>
            <td>@Html.Label("Home Country")</td>
            <td>
                @Html.TextBoxFor(m => m.Country, new { @class = "form-control", @Value = Model.Country })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.Country)</span>
            </td>
            <td>@Html.Label("HostCountry")</td>
            <td>
                @*@Html.DropDownListFor(m => m.CountryId, Model.hostCountryList ?? new List<SelectListItem>(), "--------Select------------", new { @class = "form-control" })
        <span class="text-danger">@Html.ValidationMessageFor(m => m.Country)</span>*@
                @Html.DropDownListFor(m => m.CountryId, Model.hostCountryList ?? new List<SelectListItem>(), "--------Select------------", new { id = "ddlCountries", @class = "form-control"})

            </td>
        </tr>
        <tr>
            <td>@Html.Label("Home City")</td>
            <td>
                @Html.TextBoxFor(m => m.City, new { @class = "form-control", @Value = Model.City })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.City)</span>
            </td>
            <td>@Html.Label("Host City")</td>
            <td>

                @Html.DropDownListFor(m=>m.CityId, new List<SelectListItem>(), new { id = "ddlCities", @class = "form-control"})
            </td>
        </tr>
        <tr>
            <td>@Html.Label("Expected Start Date")</td>
            <td>
                <input type="date" class="form-control"  autocomplete="off" id="startDate"  placeholder="Select Startdate"/>

            </td>
            <td>@Html.Label("Expected End Date")</td>
            <td>
                <input type="date" class="form-control" autocomplete="off" id="endDate" placeholder="Select EndDate"/>
            </td>
        </tr>
        <tr>
            <td>@Html.LabelFor(m => m.ManagerId)</td>
            <td>
                @Html.TextBoxFor(m => m.ManagerId, new { @class = "form-control", @Value = Model.ManagerId })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.ManagerId)</span>
            </td>
        </tr>

        @*<tr>
                <span class="alert-danger">@ViewBag.Message</span>
            </tr>*@
        <tr>
            <td colspan="2" style="text-align:center">
                <input type="submit" class="btn btn-primary" />
            </td>
        </tr>




    </table>
}
<script type="text/javascript" >
  
    $(document).ready(function () {
        $("#ddlCountries").change(function () {
            var country = $(this).val();
            console.log(country)
            var txt = $("#dd_Company option:selected").text();
            $.getJSON("/TravelBooking/Cities", { CountryId: country},
                function (classesData) {
                    var select = $("#ddlCities");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Select a City"
                    }));
                    $.each(classesData, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                });
        });


        
     

    });



</script>











@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>EMP</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.EmpName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.EmpName, new { htmlAtrributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Country,new { htmlAtrributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.City, new { htmlAtrributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Status, new { htmlAtrributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>




        </div>

    }*@
